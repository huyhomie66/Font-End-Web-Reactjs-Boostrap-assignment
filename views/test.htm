<!doctype html>
<html lang="en">

  <head>
    <title>Title</title>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.2/css/bootstrap.min.css"
      integrity="sha384-Smlep5jCw/wG7hdkwQ/Z5nLIefveQRIY9nfy6xoR1uRYBtpZgI6339F5dgvm/e9B"
      crossorigin="anonymous">
    <style>

      * {
        box-sizing: inherit;
      }
      
      .pn-ProductNav_Wrapper {
        position: relative;
        padding: 0 11px;
        box-sizing: border-box;
      }
      
      .pn-ProductNav {
        /* Make this scrollable when needed */
        overflow-x: auto;
        /* We don't want vertical scrolling */
        overflow-y: hidden;
        /* For WebKit implementations, provide inertia scrolling */
        -webkit-overflow-scrolling: touch;
        /* We don't want internal inline elements to wrap */
        white-space: nowrap;
        /* If JS present, let's hide the default scrollbar */
        /* positioning context for advancers */
        position: relative;
        font-size: 0;
      }
      .js .pn-ProductNav {
        /* Make an auto-hiding scroller for the 3 people using a IE */
        -ms-overflow-style: -ms-autohiding-scrollbar;
        /* Remove the default scrollbar for WebKit implementations */
      }
      .js .pn-ProductNav::-webkit-scrollbar {
        display: none;
      }
      
      .pn-ProductNav_Contents {
        float: left;
        transition: -webkit-transform .2s ease-in-out;
        transition: transform .2s ease-in-out;
        transition: transform .2s ease-in-out, -webkit-transform .2s ease-in-out;
      }
      
      .pn-ProductNav_Contents-no-transition {
        transition: none;
      }
      
      .pn-ProductNav_Link {
        text-decoration: none;
        color: #888;
        font-size: 1.2rem;
        font-family: -apple-system, sans-serif;
        display: inline-flex;
        align-items: center;
        min-height: 44px;
        border: 1px solid transparent;
        padding: 0 11px;
      }
      .pn-ProductNav_Link + .pn-ProductNav_Link {
        border-left-color: #eee;
      }
      .pn-ProductNav_Link[aria-selected="true"] {
        color: #111;
      }
      
      .pn-Advancer {
        /* Reset the button */
        -webkit-appearance: none;
           -moz-appearance: none;
                appearance: none;
        background: transparent;
        padding: 0;
        border: 0;
        /* Now style it as needed */
        position: absolute;
        top: 0;
        bottom: 0;
        /* Set the buttons invisible by default */
        opacity: 0;
        transition: opacity .3s;
      }
      .pn-Advancer:focus {
        outline: 0;
      }
      .pn-Advancer:hover {
        cursor: pointer;
      }
      
      .pn-Advancer_Left {
        left: 0;
      }
      [data-overflowing="both"] ~ .pn-Advancer_Left, [data-overflowing="left"] ~ .pn-Advancer_Left {
        opacity: 1;
      }
      
      .pn-Advancer_Right {
        right: 0;
      }
      [data-overflowing="both"] ~ .pn-Advancer_Right, [data-overflowing="right"] ~ .pn-Advancer_Right {
        opacity: 1;
      }
      
      .pn-Advancer_Icon {
        width: 20px;
        height: 44px;
        fill: #bbb;
      }
      
      .pn-ProductNav_Indicator {
        position: absolute;
        bottom: 0;
        left: 0;
        height: 4px;
        width: 100px;
        background-color: #f90;
        -webkit-transform-origin: 0 0;
                transform-origin: 0 0;
        transition: -webkit-transform .2s ease-in-out;
        transition: transform .2s ease-in-out;
        transition: transform .2s ease-in-out, -webkit-transform .2s ease-in-out;
      }
 
  
  
 </style>
  </head>

  <body>
 
    <div class="pn-ProductNav_Wrapper">
      <nav id="pnProductNav" class="pn-ProductNav">
        <div id="pnProductNavContents" class="pn-ProductNav_Contents">
          <a href="#" class="pn-ProductNav_Link" aria-selected="true">Chairs</a>
          <a href="#" class="pn-ProductNav_Link">Tables</a>
          <a href="#" class="pn-ProductNav_Link">Cookware</a>
          <a href="#" class="pn-ProductNav_Link">Beds</a>
          <a href="#" class="pn-ProductNav_Link">Desks</a>
          <a href="#" class="pn-ProductNav_Link">Flooring</a>
          <a href="#" class="pn-ProductNav_Link">Lighting</a>
          <a href="#" class="pn-ProductNav_Link">Mattresses</a>
          <a href="#" class="pn-ProductNav_Link">Solar Panels</a>
          <a href="#" class="pn-ProductNav_Link">Bookcases</a>
          <a href="#" class="pn-ProductNav_Link">Mirrors</a>
          <a href="#" class="pn-ProductNav_Link">Rugs</a>
          <a href="#" class="pn-ProductNav_Link">Curtains &amp; Blinds</a>
          <a href="#" class="pn-ProductNav_Link">Frames &amp; Pictures</a>
          <a href="#" class="pn-ProductNav_Link">Wardrobes</a>
          <a href="#" class="pn-ProductNav_Link">Storage</a>
          <a href="#" class="pn-ProductNav_Link">Decoration</a>
    
          <span id="pnIndicator" class="pn-ProductNav_Indicator"></span>

        </div>
      </nav>
      
      <button id="pnAdvancerLeft" class="pn-Advancer pn-Advancer_Left" type="button">
        <svg xmlns="http://www.w3.org/2000/svg" height="48" width="48" viewBox="0 0 48 48">
          <g>
            <path id="path1" transform="rotate(360,24,24) translate(15.8657012209571,9) scale(-0.937617193654483,0.937617193654483)  " fill="#696969" d="M1.4200482,0L17.351001,16.046996 1.4980513,31.996001 0.078979631,30.585997 14.531046,16.046019 0,1.4089964z" />
          </g>
        </svg>
        
      </button>
      <button id="pnAdvancerRight" class="pn-Advancer pn-Advancer_Right" type="button">
        <svg xmlns="http://www.w3.org/2000/svg" height="48" width="48" viewBox="0 0 48 48">
          <g>
            <path id="path1" transform="rotate(0,24,24) translate(15.8657012209571,9) scale(0.937617193654483,0.937617193654483)  " fill="#696969" d="M1.4200482,0L17.351001,16.046996 1.4980513,31.996001 0.078979631,30.585997 14.531046,16.046019 0,1.4089964z" />
          </g>
        </svg>
        
      </button>
    </div>
    <script type="text/javascript">

      var SETTINGS = {
        navBarTravelling: false,
        navBarTravelDirection: "",
        navBarTravelDistance: 150
      }


      document.documentElement.classList.remove("no-js");
      document.documentElement.classList.add("js");

      // 2 button
      var pnAdvancerLeft = document.getElementById("pnAdvancerLeft");
      var pnAdvancerRight = document.getElementById("pnAdvancerRight");
      // NÃºt span
      var pnIndicator = document.getElementById("pnIndicator");

      var pnProductNav = document.getElementById("pnProductNav");
      var pnProductNavContents = document.getElementById("pnProductNavContents");

      pnProductNav.setAttribute("data-overflowing", determineOverflow(pnProductNavContents, pnProductNav));

      // Set the indicator
      moveIndicator(pnProductNav.querySelector("[aria-selected=\"true\"]"));

      // Handle the scroll of the horizontal container
      var last_known_scroll_position = 0;
      var ticking = false;



      function doSomething(scroll_pos) {
        pnProductNav.setAttribute("data-overflowing", determineOverflow(pnProductNavContents, pnProductNav));
      }

      pnProductNav.addEventListener("scroll", function () {
        last_known_scroll_position = window.scrollY;
        if (!ticking) {
          window.requestAnimationFrame(function () {
            doSomething(last_known_scroll_position);
            ticking = false;
          });
        }
        ticking = true;
      });




      pnAdvancerLeft.addEventListener("click", function () {
        // If in the middle of a move return
        if (SETTINGS.navBarTravelling === true) {
          return;
        }
        // If we have content overflowing both sides or on the left
        if (determineOverflow(pnProductNavContents, pnProductNav) === "left" || determineOverflow(pnProductNavContents, pnProductNav) === "both") {
          // Find how far this panel has been scrolled
          var availableScrollLeft = pnProductNav.scrollLeft;
          // If the space available is less than two lots of our desired distance, just move the whole amount
          // otherwise, move by the amount in the settings
          if (availableScrollLeft < SETTINGS.navBarTravelDistance * 2) {
            pnProductNavContents.style.transform = "translateX(" + availableScrollLeft + "px)";
          } else {
            pnProductNavContents.style.transform = "translateX(" + SETTINGS.navBarTravelDistance + "px)";
          }
          // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that
          pnProductNavContents.classList.remove("pn-ProductNav_Contents-no-transition");
          // Update our settings
          SETTINGS.navBarTravelDirection = "left";
          SETTINGS.navBarTravelling = true;
        }
        // Now update the attribute in the DOM
        pnProductNav.setAttribute("data-overflowing", determineOverflow(pnProductNavContents, pnProductNav));
      });





      pnAdvancerRight.addEventListener("click", function () {
        // If in the middle of a move return
        if (SETTINGS.navBarTravelling === true) {
          return;
        }
        // If we have content overflowing both sides or on the right
        if (determineOverflow(pnProductNavContents, pnProductNav) === "right" || determineOverflow(pnProductNavContents, pnProductNav) === "both") {
          // Get the right edge of the container and content
          var navBarRightEdge = pnProductNavContents.getBoundingClientRect().right;
          var navBarScrollerRightEdge = pnProductNav.getBoundingClientRect().right;
          // Now we know how much space we have available to scroll
          var availableScrollRight = Math.floor(navBarRightEdge - navBarScrollerRightEdge);
          // If the space available is less than two lots of our desired distance, just move the whole amount
          // otherwise, move by the amount in the settings
          if (availableScrollRight < SETTINGS.navBarTravelDistance * 2) {
            pnProductNavContents.style.transform = "translateX(-" + availableScrollRight + "px)";
          } else {
            pnProductNavContents.style.transform = "translateX(-" + SETTINGS.navBarTravelDistance + "px)";
          }
          // We do want a transition (this is set in CSS) when moving so remove the class that would prevent that
          pnProductNavContents.classList.remove("pn-ProductNav_Contents-no-transition");
          // Update our settings
          SETTINGS.navBarTravelDirection = "right";
          SETTINGS.navBarTravelling = true;
        }
        // Now update the attribute in the DOM
        pnProductNav.setAttribute("data-overflowing", determineOverflow(pnProductNavContents, pnProductNav));
      });




      pnProductNavContents.addEventListener(
        "transitionend",
        function () {
          // get the value of the transform, apply that to the current scroll position (so get the scroll pos first) and then remove the transform
          var styleOfTransform = window.getComputedStyle(pnProductNavContents, null);
          var tr = styleOfTransform.getPropertyValue("-webkit-transform") || styleOfTransform.getPropertyValue("transform");
          // If there is no transition we want to default to 0 and not null
          var amount = Math.abs(parseInt(tr.split(",")[4]) || 0);
          pnProductNavContents.style.transform = "none";
          pnProductNavContents.classList.add("pn-ProductNav_Contents-no-transition");
          // Now lets set the scroll position
          if (SETTINGS.navBarTravelDirection === "left") {
            pnProductNav.scrollLeft = pnProductNav.scrollLeft - amount;
          } else {
            pnProductNav.scrollLeft = pnProductNav.scrollLeft + amount;
          }
          SETTINGS.navBarTravelling = false;
        },
        false
      );




      // Handle setting the currently active link
      pnProductNavContents.addEventListener("click", function (e) {
        var links = [].slice.call(document.querySelectorAll(".pn-ProductNav_Link"));
        links.forEach(function (item) {
          item.setAttribute("aria-selected", "false");
        })
        e.target.setAttribute("aria-selected", "true");
        moveIndicator(e.target);
      });

      function moveIndicator(item, color) {
        var textPosition = item.getBoundingClientRect();
        var container = pnProductNavContents.getBoundingClientRect().left;
        var distance = textPosition.left - container;
        pnIndicator.style.transform = "translateX(" + (distance + pnProductNavContents.scrollLeft) + "px) scaleX(" + textPosition.width * 0.01 + ")";
        if (color) {
          pnIndicator.style.backgroundColor = colour;
        }
      }




      function determineOverflow(content, container) {
        var containerMetrics = container.getBoundingClientRect();
        var containerMetricsRight = Math.floor(containerMetrics.right);
        var containerMetricsLeft = Math.floor(containerMetrics.left);
        var contentMetrics = content.getBoundingClientRect();
        var contentMetricsRight = Math.floor(contentMetrics.right);
        var contentMetricsLeft = Math.floor(contentMetrics.left);
        if (containerMetricsLeft > contentMetricsLeft && containerMetricsRight < contentMetricsRight) {
          return "both";
        } else if (contentMetricsLeft < containerMetricsLeft) {
          return "left";
        } else if (contentMetricsRight > containerMetricsRight) {
          return "right";
        } else {
          return "none";
        }
      }




    </script>
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
      crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js"
      integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49"
      crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.2/js/bootstrap.min.js" integrity="sha384-o+RDsa0aLu++PJvFqy8fFScvbHFLtbvScb8AjopnFD+iEQ7wo/CG0xlczd+2O/em"
      crossorigin="anonymous"></script>
  </body>

</html>
